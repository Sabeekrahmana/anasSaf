* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Media Queries */
@media (max-width: 921px) {
  header{
    width: max-content;

  }
}

@media (max-width: 768px) {
  header{
    width: 100%;
  }
  nav {
    display: none;
  }

  .menu-icon {
    display: block;
  }

  .menu {
    display: none;
    flex-direction: column;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    background-color: #333;
  }

  .menu li {
    text-align: center;
    margin: 10px 0;
  }
}

@media (max-width: 480px) {
  .search-box input {
    width: 150px;
  }

  .login-btn {
    padding: 5px 10px;
  }
}

@media(max-width: 525px){
  header{
    width: max-content;
  }
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background: rgb(238, 174, 202);
  background: radial-gradient(
    circle,
    rgba(238, 174, 202, 1) 7%,
    rgba(29, 100, 184, 1) 100%
  );
  color: white;
}

.logo {
  font-size: 1.5em;
}

a{
  text-decoration: none;
}

nav {
  flex-grow: 1;
}

.menu {
  list-style: none;
  display: flex;
  justify-content: center;
  gap: 30px;
}

.menu li a {
  color: white;
  text-decoration: none;
  padding: 2px 10px;
  transition: 0.3s;

  &:hover {
    border-bottom: 2px solid black;

    /* Applies when a user places their cursor over
    an element ,allowing you to change its style 
    (eg:bg-color)to provide visual feedback or indicate 
    interactivity */
  }

  /* &:active{
    transform: translateY(2px);
   color: skyblue;
   font-weight: 900;
   font-size: 30px;
  } */
  /* Applies when an element is actively being 
   clicked or pressed, providing immediate
   visual feedback during the interction */
  /* } */

  /* &:focus{
    outline: 3px solid yellow;
    background-color: orangered; */

  /* Applies when an element is selected or 
    ready to recieve input, such as a text field
    or link,often used for accessibilty and form 
    styling */
  /* } */
}
/* 
.menu li a:hover{
    border-bottom: 2px solid black;
} */

.focus {
  height: 40px;
  width: 200px;
  /* border: 1px solid black; */
  border-radius: 10px;
  text-align: center;
  border: 1px solid black;
  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,
    rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;
  /* box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px; */
  margin: 100px auto;
  cursor: pointer;
  background-color: red;
  /* &:focus{
       
    } */
}
.focus:focus {
  background: #f4b400 !important;
  color: #fff;
}

.search-box {
  position: relative;
  margin-left: 65px;
}

.search-box input {
  padding: 5px;
  border: none;
  border-radius: 3px;
}

.search-btn {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  background: none;
  border: none;
  color: white;
  cursor: pointer;
}

.login-btn {
  background-color: #f4b400;
  border: none;
  padding: 10px 20px;
  color: white;
  border-radius: 3px;
  cursor: pointer;
  font-weight: 800;
  transition: 0.9s;
}

.login-btn:hover {
  background-color: black;
  color: #f7e4b1;
}

/* Toggle Button */
.menu-icon {
  display: none;
  font-size: 1.5em;
  cursor: pointer;
}

#menu-toggle {
  display: none;
}

#menu-toggle:checked + nav .menu {
  display: flex;
}


.search-box {
  position: relative;
}
.icons {
  color: blue;
  font-size: 15px;
  position: absolute;
  top: 6px;
  right: 9px;
}

.btnFocus {
  background-color: bisque;
  color: black;
  margin: 10px auto;
  border-radius: 5px;
  padding: 15px 20px;
  font-size: 20px;
  cursor: pointer;
}
.btnFocus:focus {
  outline: 3px solid yellow;
  background-color: orangered;
}

.btnFocus:active {
  transform: translateY(2px);
  /* transform: translateY(10px);
    background-color: orangered; */
}

.dropdown-menu {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
.menu > li {
  position: relative;
  display: inline-block;
}
.menu > li > a {
  text-decoration: none;
  padding: 10px 15px;
  display: block;
}

.dropdown-menu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  background-color: #fff;
  border: 1px solid #ddd;
  min-width: 160px;
  z-index: 1000;
}
.dropdown-menu > li > a {
  display: block;
  padding: 10px 15px;
  color: #333;
  &:hover {
    background-color: #f0f0f0;
  }
}
.dropdown:hover .dropdown-menu {
  display: block;
}

/* <!-- PSEUDO ELEMENTS-------------->  */

.pseudo_elements {
  border: 1px solid green;
  width: 500px;
  height: 500px;
  margin: 0 auto;
  padding: 20px 10px;
}
/* p {
  font-size: 20px;
  padding: 50px;
} */

/* p::before{
    content: "Before";
    background: orange;
    font-size: 20px;
    display: block;
   
    padding: 10px;
}
p::after{
    content: "After";
    background: green;
    font-size: 20px;
    text-transform: uppercase;
    display: block;
    padding: 10px;
} */

h2 {
  width: max-content;
}

h2::after {
  content: "";
  background: rgb(2, 0, 36);
  background: linear-gradient(
    90deg,
    rgba(2, 0, 36, 1) 0%,
    rgba(9, 9, 121, 1) 35%,
    rgba(0, 212, 255, 1) 100%
  );
  display: block;
  height: 4px;
  transition: 1s;
  width: 100%;
}

h2:hover::after {
  width: 0;
}

.dropdown2 {
  margin: 0 auto;
  position: relative;
  width: 200px;
  height: 50px;
  background-color: aqua;
  border: 1px solid blue;
  color: #333;
  text-align: center;
  border-radius: 10px;
}
.item {
  /* width: 200px; */
  display: none;
  position: absolute;
  z-index: 9999;
  top: 50px;
  text-align: center;
  background-color: #ddd;
  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
}
.style2 {
  text-align: center;
  padding: 10px;
  border: 1px solid rgb(98, 97, 97);
  &:hover {
    background-color: #f0f0f0;
  }
}
.dropdown2:hover .item {
  display: block;
}

.demoimg {
  filter: blur(4px);
}
.brightness {
  filter: brightness(0.2);
}
.contrast {
  filter: contrast(180%);
}
.grayscale {
  filter: grayscale(100%);
}
.hue-rotate {
  filter: hue-rotate(90deg);
}
.invert {
  filter: invert(100%);
}
.opacity {
  filter: opacity(60%);
}
.saturate {
  filter: saturate(7);
}
.sepia {
  filter: sepia(100%);
}
.drop-shadow {
  filter: drop-shadow(10px 8px 13px red);
}
.h1 {
  text-shadow: -5px 3px 4px rgba(221, 225, 45, 0.73);
}

/* CSS IMAGE ADD -------  */

.cssImg {
  /* background-image: url(/Assets/Images/jmct-logo.png); */
  width: 100%;
  height: 900px;
  background-repeat: no-repeat;
  filter: blur(2px);
  /* margin-left: 45%; */
  background-size: cover;
  background-position: center;
}

/* ----  GRID  ------- */

.mainGrid {
  border: 2px solid black;
  margin: 100px 50px;
  display: grid;
  grid-template-columns: auto auto auto;
  /* grid-template-columns: 1fr 2fr 1fr 2fr;
    grid-template-rows: 1fr 2fr 1fr 2fr; */
  row-gap: 10px;
}

.mainGrid div {
  background-color: orangered;
  /* width: 150px;
    height: 150px; */
  margin: 10px;
  font-size: 30px;
  font-weight: 900;
  /* text-align: center; */
  display: flex;
  justify-content: center;
  align-items: center;
}

.four {
  background: yellow !important;
  grid-row: span 2;
  /* grid-column: span 3; */
}

.mainGrid div:nth-child(8) {
  grid-row: span 2;
  background-color: #f4b400;
}

.mainGrid div:nth-child(5) {
  grid-column: span 2;
}

.gridContainer {
  background-color: beige;
  padding: 20px;
  /* height: 100vh; */
  /* display: flex;
    justify-content: center;
    align-items: center; */

  /* display: grid;
    grid-template-columns:  repeat(3,auto); */
  /* grid-template-columns: auto auto auto; */
  /* column-gap: 20px; */
  /* row-gap: 20px; */

  display: grid;
  grid-template-columns: 1fr 4fr auto auto;
  gap: 20px;
}

.gridContainer div {
  border: 1px solid black;
  text-align: center;
  background-color: lightcyan;
}

.gridContainer div:nth-child(3) {
  /* grid-row: span 2; */
  display: flex;
  align-items: center;
  justify-content: center;
}
.gridContainer div:nth-child(5) {
  /* grid-row: span 2; */
}
.gridContainer div:nth-child(7) {
  /* background-color: #f4b400; */
}
.gridContainer div:first-child {
  /* grid-column: span 4; */
}
.gridContainer div:last-child {
  /* grid-column: span 4; */
  /* grid-row: span 4; */
  /* background-color: rosybrown; */
}

/* ---GRID RESPONSIVE---  */

section {
  border: 2px solid blueviolet;
  padding: 50px;
}

section h1 {
  text-align: center;
  color: darkcyan;
  margin-bottom: 40px;
}
.card {
  /* margin: 0 30px; */
  padding: 20px;
  text-align: center;
  border: 1px solid yellowgreen;
  border-radius: 10px;
  background-color: lightyellow;
}

.grid-responsive {
  border: 1px solid red;
  display: grid;
  /* grid-template-columns: auto auto auto auto; */
  /* grid-template-columns: repeat(auto-fit,1fr); */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 10px;
  justify-content: center;
  align-items: center;
}

/* FLEXBOX :- 
    ->It is best for laying out items in one (1)
       dimension (either a row or column).
    ->It's great for a alignment, spacing, and 
       distributing items.
    ->Simpler for single axis layouts flexible 
       alignment...

    GRID :- 
    -> Grid is for Twon Dimensional layouts (rows and
       colums),allowing more complex and precise arrangments.
    ->More control over both axes,ideal for complete page 
    layouts..

*/

/* CENTER OF THE CONTAINER  */

.parent {
  background-color: darkmagenta;
  width: 300px;
  height: 300px;
  /* display: grid;
    justify-content: center;
    align-items: center; */
  /* position: relative; */
}
.child {
  background-color: lightgoldenrodyellow;
  width: 70px;
  height: 70px;
  transform: translate(100px, 100px);
  /* margin: auto; */
  /* position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
     */
}

.transform {
  /* margin: 0 auto; */

  width: 200px;
  height: 200px;
  background-color: chartreuse;
  border: 1px solid rgba(0, 0, 0, 0.16);
  /* transform: translate(100px, 200px);*/
  transition: .9s ease-out;
  
  &:hover{
    transform: translateX(500px);
  }
}
.rotate {
  width: 200px;
  height: 200px;
  background-color: darkcyan;
  border: 1px solid rgba(0, 0, 0, 0.16);
  transition: .3s;
  
  &:hover {
    transform: rotate(180deg);
    border-radius: 60%;
  }
}
.scale{
  width: 200px;
  height: 200px;
  background-color: lightgoldenrodyellow;
  border: 1px solid rgba(0, 0, 0, 0.16);
  transform: scale(1.5);
  /*  0.5 means 50% */
/* Increases the height to 350% */

/* transform: scaleX(2.5); */
/* Increases the width to 250% */
}
.skew{
  margin: 0 auto;
  width: 200px;
  height: 200px;
  background-color: lightgoldenrodyellow;
 
  border: 1px solid rgba(0, 0, 0, 0.16);

  &:hover{
    transform:skew(60deg,50deg);
  }
}
.matrix{
  transition: 0.5s ease;
  margin: 0 auto;
  width: 200px;
  height: 200px;
  background-color: rgb(197, 46, 197);
  border: 1px solid rgba(0, 0, 0, 0.16);
  transform:matrix(1,0,-0.5);
  /* The Matrix() method combines all the
  2 transform methods into one */

/* The Parameters are as follows: 
    matrix(scaleX(),skewY(),skewX(),scaleY(),
    translateX(), translateY()
*/
}

.mix{
  width: 150px;
  height: 150px;
  background-color: rosybrown;

  transform: matrix(1,0.5,-0.5,1,0,0);
}

/*---- matrix----
transform: matrix(a,b,c,d,e,f)
'a'-ScaleX-->Scaling on the X-axis.
'b'-SkewY-->Skewing on the Y-axis.
'c'-SkewX-->Skewing on the X-axis.
'd'-ScaleY-->Scaling on the Y-axis.
'e'-ScaleX-->translate on the X-axis.
'f'-ScaleY-->translate on the Y-axis.
*/

.transform2{
  transition: 0.5s ease;
  margin: 0 auto;
  width: 150px;
  height: 150px;
  background-color: #17830f;
  border: 1px solid rgba(0, 0, 0, 0.16);

  &:hover{
    /* background-color: #f7e4b1; */
  }
}

.transform2:hover{
  background-color: #f7e4b1;
  transform: rotateX(180deg);
  transition: infinite;
}

/* Animation gives interactive effects
for the Websites{Attractive designs} */

.animateButton{
  margin: 10%;
  border: none;
  background-color: skyblue;
  padding: 10px;
  border-radius: 100px;
  color: #fff;
  font-size: 24px;
  font-weight: 800;
  cursor: pointer;
  transition: .3s ease;

  &:hover{
    transform: scale(1.5);
    background-color: darkblue;
  }
 
}

.element{
  height: 200px;
  width: 200px;
  background-color: burlywood;
  font-weight: 800;
  font-size: 20px;
  transform: translateX(500px);
  text-align: center;
}

.element h5{
  transform: translateY(90px);

}

.anibox{
  height: 200px;
  width: 200px;
  /* transform: translateX(400px); */
  background-color: red;

  &:hover{
  transform: rotateZ(120deg);

  }
}


/* ANIMATION BUTTON  */
button {
  margin: 20px;
}
.custom-btn {
  width: 130px;
  height: 40px;
  color: #fff;
  border-radius: 5px;
  padding: 10px 25px;
  font-family: 'Lato', sans-serif;
  font-weight: 500;
  background: transparent;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  display: inline-block;
   box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5),
   7px 7px 20px 0px rgba(0,0,0,.1),
   4px 4px 5px 0px rgba(0,0,0,.1);
  outline: none;
}


.btn-5 {
  width: 130px;
  height: 40px;
  line-height: 42px;
  padding: 0;
  border: none;
  background: rgb(255,27,0);
background: linear-gradient(0deg, rgba(255,27,0,1) 0%, rgba(251,75,2,1) 100%);
}
.btn-5:hover {
  color: #f0094a;
  background: transparent;
   box-shadow:none;
   animation: name duration timing-function delay iteration-count direction fill-mode;
}
.btn-5:before,
.btn-5:after{
  content:'';
  position:absolute;
  top:0;
  right:0;
  height:2px;
  width:0;
  background: #f0094a;
  box-shadow:
   -1px -1px 5px 0px #fff,
   7px 7px 20px 0px #0003,
   4px 4px 5px 0px #0002;
  transition:400ms ease all;
}
.btn-5:after{
  right:inherit;
  top:inherit;
  left:0;
  bottom:0;
}
.btn-5:hover:before,
.btn-5:hover:after{
  width:100%;
  transition:800ms ease all;
}